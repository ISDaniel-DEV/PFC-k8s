apiVersion: apps/v1
kind: Deployment
metadata:
  name: nodejs-app
  labels:
    app: nodejs-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nodejs-app
  template:
    metadata:
      labels:
        app: nodejs-app
    spec:
      containers:
        - name: nodejs-app
          image: calvinhub/pfc-k8s-nodejs-app:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 3000
          resources:
            requests:
              cpu: "100m"
              memory: "256Mi"
            limits:
              cpu: "500m"
              memory: "512Mi"
          env:
            - name: MYSQL_SERVICE_HOST
              value: "mysql"
            - name: MYSQL_USER
              valueFrom:
                secretKeyRef:
                  name: mysql-secret
                  key: username
            - name: MYSQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysql-secret
                  key: password
            - name: MYSQL_DATABASE
              value: pfc-bbdd
            - name: NODE_ENV
              value: "production"
          volumeMounts:
            - name: uploads-volume
              mountPath: /app/uploads
              subPath: uploads
            - name: publicaciones-volume
              mountPath: /app/public/uploads/publicaciones
              subPath: publicaciones
      volumes:
        - name: uploads-volume
          persistentVolumeClaim:
            claimName: uploads-pvc
        - name: publicaciones-volume
          persistentVolumeClaim:
            claimName: publicaciones-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: nodejs-service
  labels:
    app: nodejs-app
spec:
  selector:
    app: nodejs-app
  ports:
    - port: 3000
      targetPort: 3000
  type: ClusterIP
